cor.test(nearest.neighbour, testosterone)
y = log(27)
y
exp(3.295837)
exp(3.2958371)
exp(3.295837)
exp(3.295836866)
exp(y)
exp(log(27))
2,631^2.631
2.631^2.631
2.631^3.5
log(27)/log(3.5)
y= log(27)/log(3.5)
3.5^y
?signif
signif(pi,27)
X <- seq(1,10,by=2)
X
X <- seq(1,10)
X <- seq(10,40,10)
X
logX <- function(x){}
logX <- function(x){
n <- log10}
matrix(data = seq(1,12))
m <- matrix(data = seq(1,12))
m
dim(m)
m <- matrix(data = seq(1,12), nrow=3)
m
dim(m)
Z <- rnorm(10,2,0.1)
Z
length(Z)
mean(Z)
sd(Z)
var(Z)
?rnorm
Z
summary(Z)
Z <- rnorm(10,2)
summary(Z)
Z <- rnorm(10,2,10)
summary(Z)
Z <- rnorm(10,2,10)
summary(Z)
Z <- rnorm(10,2,0)
Z
Z <- rnorm(10,2,0.1)
Z
summary(Z)
p <- 3:5
Z[p]
Z
p <- c(3:5,10)
Z[p]
Z[(3:5,10)]
Z[3:5,10]
Z
Z[-10]
Z[-10]
Z
Z[is.na]
Z[is.na(Z)]
Z[11]<-NA
Z
Z[is.na(Z)]
Z[Z>1.95]
Z <- rnorm(10,2,0.1)
max(Z)
which(Z==ma(Z))
which(Z==max(Z))
which(Z==mean(Z))
which(Z==min(Z))
which(Z>mean(Z))
which(Z>mean(Z)+0.05)
ls
ls()
m
M1 <- c(8.47, 6.08, 9.57, 12.18, 7.6, 9.67, 9.39, 10.83, 10.46, 10.55, 8.37, 10.58, 9.42, 7.95, 11.86)
mean(M1)
min(M1)
max(M1)
range(M1)
range(M1)==c(min(M1),max(M1))
hist(M1, col="brown", main="")
boxplot(M1, col="grey", xlab="M1", ylab="Value")
mean(M1)
M2 <- c(M1, 17.3)
M2
M1
par(mfrow = c(1,2))
hist(M2,col="grey", main="")
boxplot(M2, col="grey", xlab="M1", ylab="Value")
stem(M1, scale=2)
stem(M2, scale=3)
stem(M1, scale=3)
stem(M2, scale=3)
stem(M2)
par(mfrow = c(2,2))
hist(rnorm(1000,5,2), col="grey", main="Normal", breaks=15)
hist(exp(rnorm(1000,0,0.5)), col="grey", main="Lognormal", breaks=15)
hist(rpois(1000,0,0.5), col="grey", main="Poisson")
hist(rpois(1000,2), col="grey", main="Poisson")
hist(c(rnorm(500,0,2), rnorm(500,8,2)), col="grey", main="Bimodal", breaks=15)
mean(M1)
mean(M2)
dens <- density(M1)
M1
dens
dens$x[1]
dens$x[which(dens$y==max(dens$y))]
meanM1 <- mean(M1)
M1 - meanM1
sum(M1 - meanM1)
sum((M1 - meanM1)^2)
summary(M1)
summary(M1)
sum((M1 - meanM1)^2)/(length(M1)-1)
var(M1)
sum((M1 - meanM1)^2)/(length(M1)-1) == var(M1)
sum((M1 - meanM1)^2)/(length(M1)-1) == var(M1)
x1 <- seq(-4,4, length=100)
y1 <- dnorm(x1, mean=0, sd=1)
y2 <- dnorm(x1, mean=0, sd=2)
y1
y2
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)"))
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
rm(list=ls())
y1 <- dnorm(x1, mean=0, sd=1)
x1 <- seq(-4,4, length=100)
y1 <- dnorm(x1, mean=0, sd=1)
y2
y2 <- dnorm(x1, mean=0, sd=2)
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
par(mfrow="default")
par()
par(mfrow=c(1,1))
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)") points(y2~x1)
plot(y1~x1, type='l', col='darkgreen', xlab="x", ylab="P(x)")
??points
?points
points(y2~x1)
points(y2~x1, type='l', col='steelblue')
rm(points(y2~x1))
objects
objects()
rm(list=objects())
par(mfrow=c(1,1))
X1 <- replicate(1000, mean(rnorm(n=5, mean=5, sd=2)))
X1
dim(X1)
length(X1)
hist(X1,col="grey")
sd(X1)
X1 <- replicate(1000, mean(rnorm(n=5, mean=5, sd=2)))
hist(X1,col="grey")
sd(X1)
X1 <- replicate(1000, mean(rnorm(n=25, mean=5, sd=2)))
hist(X1,col="grey")
sd(X1)
X1 <- replicate(1000, mean(rnorm(n=25, mean=5, sd=2)))
hist(X1,col="grey")
sd(X1)
rm(list=objects())
ls()
X1 <- seq(-3,3, length=300)
X1
X1[1]
X1[2]
length(X1)
6/300
X1[150]
X1[151]
X1[149]
300/6
[X300]-X[299]
X[300]-X[299]
X1[300]-X1[299]
X1[299]-X1[298]
n = X1[299]-X1[298]
n
n*300
n*301
300/n
1/300
1/300*6
6/300
X1 <- seq(-3,3, length=300)
Y1 <- dnorm(X1)
Y1
?dnorm
plot(X1,Y1, type="n", xlab="x", ylab="P(x)")
abline(v=0, lwd=0.5, lty=2)
x0 <-min(which(X1 >= -2.58))
x1 <-min(which(X1 >= -1.96))
x2 <-min(which(X1 >= -1))
x3 <-min(which(X1 >= 1.96))
x3 <-min(which(X1 >= 1))
x4 <-min(which(X1 >= 1.96))
x5 <-min(which(X1 >= 2.58))
polygon(x=c(X1[c(1,1:x0,x0)]), y=c(0,Y1[1:x0],0) col="white", border=NA)
polygon(x=c(X1[c(1,1:x0,x0)]), y=c(0,Y1[1:x0],0), col="white", border=NA)
polygon(x=c(X1[c(x0,1:x0,x0)]), y=c(0,Y1[1:x0],0), col="white", border=NA)
rm(list=ls())
help(ggplot2)
?mean
?mean
?mean
?"+"
?"if"
?'for'
?'cor'
search("plot")
help.search("plotting")
??plotting
help.search("regression model")
a_vector <- c(1, 3, 6, 10)
a_vector
apropos("vector")
apropos("z$")
apropos("z$z")
apropos("$z")
apropos("$a")
apropos("$r")
apropos("$r
")
apropos("r$")
demo()
demo()
demo(Japanese)
demo(ggplot2)
demo(ggplot)
demo(lm)
demo(rnorm)
browseVignettes()
browseVignettes() # short documents on how to use the packages
1:10/3
1:10%%3
1:10%3
(1:10)%3
(1:10)%%3
3%3
3%%3
5%%3
(1:10)%/%3
1:10
x <- 1:10>5
x
(x <- 1:10>5)
x
rm(list=object())
rm(list=objects())
x
(x <- 1:10>5)
x
(x <- 1:10>=5)
y <- 1:10
y
y <- c(1:10)
y
y[y>5]
y <- y>5
y
y <- y>=5
y
x <- c(T,F,NA)
(x <- c(T,F,NA))
x
rm(list=ls())
class(c(F))
class(c(F,T,NA))
class(c(F,T,na))
class(c(F,T,NA))
class(3+i)
class(3+1i)
class(1:5)
class(1:5.0)
class(1:5.1)
class(1.1:5.1)
class(1.1:5)
class(1:5.4)
1:5.4
1.4:5
.Machine
(gender <- factor(c("male", "female", "female", "male", "female")))
gender
levels(gender)
nlevels(gender)
as.integer(gender)
gender_char <- sample(c("female", "male"), 10000, replace=TRUE)
gender_char
gender_fac <- as.factor(gender_char)
ls()
object.size(gender_char)
object.size(gender_fac)
as.character(gender)
is.character("red lorry, yellow lorry")
ls(pattern ="^ls", "adasd")
ls(pattern ="^ls", ls())
ls(pattern ="^ls", baseenv())
ls(pattern ="^is", baseenv())
x<-"123.456"
as(x, "numeric")
as.numeric(x)
ulams_spiral <- c(1, 8, 23, 46, 77)
print ulams_spiral
print(ulams_spiral)
ulams_spiral
for (i in ulams_spiral) print(i)
?runif
runif(30)
hist(runif(30))
num <- runif(30)
num
summary(num)
ls()
rm(list=ls())
8.5:4.5
(c(8.5:4.5))
c(1,1:3, c(5,8),13)
vector("nuneric", "a")
vector("nuneric", a)
vector("nuneric", 5)
vector("numeric", "a")
vector("numeric", a)
vector("numeric", 5)
vector("complex", 10)
sum(vector("complex", 10))
vector("data.frame", 5)
vector("list", 5)
c<-numeric(10)
c
c<-2
c
c<-numeric(10)
c<-c+1
c
c[c<1]<-11
c
c[c<1]
c<1
c[c<=1]<-11
c
x<-1:5
x
x
x^2
x^^2
x^2
x
x<-x^2
x
x
x[c(1,3,5)]
x[c(1,3,5)]==x[c(-2,-4)]
x[c(T,F,T,F,T)]
names(x) <- c("one", "four", "nine", "sixteen", "twenty five")
x
x[c("one", "nine", "twenty five")]
x[c(1,NA,5)]
x[c(T,F,NA,F,T)]
x[c(T,F,NA,F,T)]==x[c(1,NA,5)]
x[5]
x[6]
x[-1:9]
x[-1.9]
x[-2.9]
x
x[]
x==x[]
x[x>10]
which(x>10)
which(x>10)==x[x>10]
x
which.min(x)
which.max(x)
1:5
1:15
1:5+1:15
1:4+1:15
rep(1:3,2)
rep(1:5,3)
rep(1:5, each=3)
?rep
rep(1:2)
rep(1:2, times=1)
rep(1:2, times=2)
rep(1:3, times=2)
rep(1:3, times=1:2)
rep(1:3, times=1:3)
rep(1:5, times=1:5)
new.env()
an_environment[["pythag"]] <- c(12, 15, 20, 21)
an_environment <- new.env()
an_environment[["pythag"]] <- c(12, 15, 20, 21)
an_environment$root <- polyroot(c(6, -5, 1))
an_environment
an_environment()
ls(envir = an_environment)
an_environment["root"]
an_environment[["root"]]
an_environment[["pythag"]]
an_environment$root
assign(
"moonday",
weekdays(as.Date("1969/07/20")),
an_environment
)
get("moonday", an_environment)
ls(envir = an_environment)
ls.str(envir = an_environment)
hypotenuse <- function(x=5, y=12){}
hypotenuse <- function(x=5, y=12){}
hypotenuse <- function(x=5, y=12){
sqrt(x^2+y^2)
}
hypotenuse()
25+144
sqrt(169)
formalArgs(hypotenuse)
formals(hypotenuse)
formal(hypotenuse)
formals(hypotenuse)
args(hypotenuse)
argsAnywhere(hypotenuse)
hypotenuse
body(hypotenuse)
body(mean)
UseMethod("mean")
UseMethod(mean)
body(hypotenuse)
dfr1 <- data.frame(x = 1:5, y = rt(5, 1))
dfr2 <- data.frame(x = 6:10, y = rf(5, 1, 1))
dfr3 <- data.frame(x = 11:15, y = rbeta(5, 1, 1))
dfr1
dfr2
dfr2
dfr3
rbind(dfr1, dfr2, dfr3)
rbind(dfr1, dfr2, dfr3)
cls = ls()
cls
rm(list=ls())
cls
list(1:5)
list(5:1)
x_plus_y <- function(x,y) x+y
x_plus_y(3,4)
(emp_cum_dist_fn <- ecdf(rnorm(50)))
is.function(emp_cum_dist_fn)
plot(emp_cum_dist_fn)
h <- function(x)
{
x * y
}
h(9)
y<-16
h(9)
y<-10
h(9)
help.start()
help.start()
plot(as.POSIXct(x,origin="1960-01-01"),y,type="l",xlab="Time")
ls()
rm(list=ls())
source('~/tmp/project-2.R', echo=TRUE)
source('~/tmp/project-2.R', echo=TRUE)
head(SCC)
source('~/.active-rstudio-document', echo=TRUE)
bmore.emissions <- NEI[(NEI$fips=="24510") & (NEI$type=="ON-ROAD"),]
bmore.emissions.aggr <- aggregate(Emissions ~ year, data=bmore.emissions, FUN=sum)
top(bmore.emissions)
head(bmore.emissions)
nrow(bmore.emissions)
bmore.emissions
source('~/ExploratoryDataAnalysis/plot1.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot1.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot1.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot2.R', echo=TRUE)
rm(list=objects())
source('~/ExploratoryDataAnalysis/plot3.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot3.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot3.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot4.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot4.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot5.R', echo=TRUE)
source('~/ExploratoryDataAnalysis/plot6.R', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
source('~/tmp/run_analysis2.R', echo=TRUE)
source('~/tmp/run_analysis2.R', echo=TRUE)
source('~/tmp/run_analysis2.R', echo=TRUE)
source('~/tmp/run_analysis2.R', echo=TRUE)
warnings()
source('~/tmp/run_analysis2.R', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
source('~/tmp/run_analysis.R', echo=TRUE)
setwd("~/Getting-and-Cleaning-Data-Coursera-Project >")
setwd("~/Getting-and-Cleaning-Data-Coursera-Project")
source('~/Getting-and-Cleaning-Data-Coursera-Project/run_analysis.R', echo=TRUE)
